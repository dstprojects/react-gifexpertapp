{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUH,GAFvF,sBAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAMA,EAAN,OCHCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAZAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAAEpB,IAEEqB,EDlB0BK,CAAc1B,GAAlCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAoDhB,EAApD,KAECoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAENH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEfnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,oCACI,8CAGA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UChBtC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ad7c02db.chunk.js","sourcesContent":["import React , { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n\n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=GABaF9HjjMrZuuxl2rZnwsnPrWqCvtnB&q=${ encodeURI(category) }&limit=10`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map ( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        } \n    } )\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}></img>\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n    \n    const { data:images, loading } = useFetchGifs( category );\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\n            <div className=\"card-grid\">\n                {\n                     images.map( img => \n                        <GifGridItem  \n                            key={img.id}\n                            {...img}\n                        />\n                    )\n                }\n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n\n        data: [],\n        loading: true\n        \n    })\n\n    useEffect(() => {\n\n        getGifs( category )\n        .then(imgs => {\n            setstate({\n                data: imgs,\n                loading: false\n            })\n        })\n        \n    }, [ category ])\n\n    return state;\n\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['One punch']);    \n\n    return (\n        <>\n            <h2>\n                Gif Expert App\n            </h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr></hr>\n            \n            <ol>\n                {\n                    categories.map( category =>\n                        <GifGrid \n                            key={category}\n                            category={category}\n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}